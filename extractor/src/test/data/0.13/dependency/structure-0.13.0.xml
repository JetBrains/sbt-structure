<?xml version="1.0" encoding="UTF-8"?>
<structure sbt="0.13.0">
  <project>
    <id>dependency:$URI_BASE</id>
    <buildURI>$URI_BASE</buildURI>
    <name>some-name</name>
    <organization>some-organization</organization>
    <version>1.2.3</version>
    <base>$BASE</base>
    <target>$BASE/target</target>
    <build>
      <import>import sbt._, Keys._</import>
      <classes>$SBT_BOOT/scala-2.10.2/lib/jansi.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/lib/jline.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/lib/scala-compiler.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/lib/scala-library.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/lib/scala-reflect.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/actions-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/api-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/apply-macro-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/cache-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/classfile-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/classpath-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/collections-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/command-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/compile-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/compiler-integration-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/compiler-ivy-integration-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/completion-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/control-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/cross-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/incremental-compiler-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/io-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/ivy-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/ivy-2.3.0-rc1.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/jline-2.11.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/jsch-0.1.46.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/launcher-interface-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/logging-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/main-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/main-settings-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/persist-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/process-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/relation-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/run-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/sbinary_2.10-0.4.2.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/sbt-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/scala-reflect-2.10.2.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/task-system-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/tasks-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/test-agent-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/test-interface-1.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/testing-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/tracking-0.13.0.jar</classes>
      <classes>$SBT_BOOT/scala-2.10.2/org.scala-sbt/sbt/0.13.0/xsbti/interface-0.13.0.jar</classes>
      <sources>$IVY2/cache/com.jcraft/jsch/srcs/jsch-0.1.46-sources.jar</sources>
      <sources>$IVY2/cache/jline/jline/srcs/jline-2.11-sources.jar</sources>
      <sources>$IVY2/cache/org.apache.ivy/ivy/srcs/ivy-2.3.0-rc1-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-lang/scala-compiler/srcs/scala-compiler-2.10.2-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-lang/scala-library/srcs/scala-library-2.10.2-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-lang/scala-reflect/srcs/scala-reflect-2.10.2-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/actions/srcs/actions-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/api/srcs/api-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/apply-macro/srcs/apply-macro-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/cache/srcs/cache-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/classfile/srcs/classfile-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/classpath/srcs/classpath-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/collections/srcs/collections-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/command/srcs/command-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/compile/srcs/compile-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/compiler-integration/srcs/compiler-integration-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/compiler-ivy-integration/srcs/compiler-ivy-integration-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/completion/srcs/completion-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/control/srcs/control-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/cross/srcs/cross-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/incremental-compiler/srcs/incremental-compiler-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/interface/srcs/interface-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/io/srcs/io-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/ivy/srcs/ivy-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/launcher-interface/srcs/launcher-interface-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/logging/srcs/logging-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/main-settings/srcs/main-settings-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/main/srcs/main-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/persist/srcs/persist-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/precompiled-2_8_2/srcs/precompiled-2_8_2-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/precompiled-2_9_2/srcs/precompiled-2_9_2-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/precompiled-2_9_3/srcs/precompiled-2_9_3-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/process/srcs/process-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/relation/srcs/relation-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/run/srcs/run-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/sbt/srcs/sbt-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/task-system/srcs/task-system-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/tasks/srcs/tasks-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/test-agent/srcs/test-agent-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/test-interface/srcs/test-interface-1.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/testing/srcs/testing-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-sbt/tracking/srcs/tracking-0.13.0-sources.jar</sources>
      <sources>$IVY2/cache/org.scala-tools.sbinary/sbinary_2.10/srcs/sbinary_2.10-0.4.2-sources.jar</sources>
    </build>
    <scala>
      <version>2.10.1</version>
      <jar>$IVY2/cache/org.fusesource.jansi/jansi/jars/jansi-1.4.jar</jar>
      <jar>$IVY2/cache/org.scala-lang/jline/jars/jline-2.10.1.jar</jar>
      <jar>$IVY2/cache/org.scala-lang/scala-compiler/jars/scala-compiler-2.10.1.jar</jar>
      <jar>$IVY2/cache/org.scala-lang/scala-library/jars/scala-library-2.10.1.jar</jar>
      <jar>$IVY2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.10.1.jar</jar>
    </scala>
    <configuration id="compile">
      <sources>$BASE/src/main/java</sources>
      <sources>$BASE/src/main/scala</sources>
      <sources managed="true">$BASE/target/scala-2.10/src_managed/main</sources>
      <resources>$BASE/src/main/resources</resources>
      <resources managed="true">$BASE/target/scala-2.10/resource_managed/main</resources>
      <classes>$BASE/target/scala-2.10/classes</classes>
    </configuration>
    <configuration id="test">
      <sources>$BASE/src/test/java</sources>
      <sources>$BASE/src/test/scala</sources>
      <sources managed="true">$BASE/target/scala-2.10/src_managed/test</sources>
      <resources>$BASE/src/test/resources</resources>
      <resources managed="true">$BASE/target/scala-2.10/resource_managed/test</resources>
      <classes>$BASE/target/scala-2.10/test-classes</classes>
    </configuration>
    <dependencies>
      <module configurations="test" organization="junit" name="junit" revision="3.8.1" artifactType="jar" classifier=""/>
      <module configurations="compile" organization="org.scala-lang" name="scala-library" revision="2.10.1" artifactType="jar" classifier=""/>
      <jar configurations="compile">$BASE/lib/unmanaged.jar</jar>
    </dependencies>
    <resolver name="public" root="http://repo1.maven.org/maven2/"/>
    <setting>
      <label>dependencyOverrides</label>
      <description>Declares managed dependency overrides.</description>
      <rank>40</rank>
      <value>Set()</value>
    </setting>
    <setting>
      <label>scalaOrganization</label>
      <description>
        Organization/group ID of the Scala used in the project. Default value is 'org.scala-lang'. This is an advanced setting used for clones of the Scala Language. It should be disregarded in standard use cases.
      </description>
      <rank>100</rank>
      <value>org.scala-lang</value>
    </setting>
    <setting>
      <label>sourceManaged</label>
      <description>Default directory for sources generated by the build.</description>
      <rank>39</rank>
      <value>$BASE/target/scala-2.10/src_ma...</value>
    </setting>
    <setting>
      <label>maxErrors</label>
      <description>The maximum number of errors, such as compile errors, to list.</description>
      <rank>10</rank>
      <value>100</value>
    </setting>
    <setting>
      <label>cleanupCommands</label>
      <description>Commands to execute before the Scala interpreter exits.</description>
      <rank>41</rank>
      <value></value>
    </setting>
    <setting>
      <label>ivyXml</label>
      <description>Defines inline Ivy XML for configuring dependency management.</description>
      <rank>40</rank>
      <value></value>
    </setting>
    <setting>
      <label>pomAllRepositories</label>
      <description>If true, includes repositories used in module configurations in the pom repositories section. If false, only the common repositories are included.</description>
      <rank>41</rank>
      <value>false</value>
    </setting>
    <setting>
      <label>licenses</label>
      <description>Project licenses as (name, url) pairs.</description>
      <rank>41</rank>
      <value>List()</value>
    </setting>
    <setting>
      <label>artifacts</label>
      <description>The artifact definitions for the current module. Must be consistent with packagedArtifacts.</description>
      <rank>40</rank>
      <value>List(Artifact(some-name,pom,pom,None,List(pom),None,Map()), Artifact(some-name,jar,jar,None,List(com...</value>
    </setting>
    <setting>
      <label>retrievePattern</label>
      <description>Pattern used to retrieve managed dependencies to the current build.</description>
      <rank>10000</rank>
      <value>[type]s/[organisation]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[artifact](-[revision])(-[...</value>
    </setting>
    <setting>
      <label>organization</label>
      <description>Organization/group ID.</description>
      <rank>9</rank>
      <value>some-organization</value>
    </setting>
    <setting>
      <label>sbtResolver</label>
      <description>Provides a resolver for obtaining sbt as a dependency.</description>
      <rank>41</rank>
      <value>URLRepository(typesafe-ivy-releases,Patterns(ivyPatterns=List(http://repo.typesafe.com/typesafe/ivy-...</value>
    </setting>
    <setting>
      <label>classpathOptions</label>
      <description>Configures handling of Scala classpaths.</description>
      <rank>10000</rank>
      <value>ClasspathOptions(true,false,false,true,true)</value>
    </setting>
    <setting>
      <label>loadedBuild</label>
      <description>Provides access to the loaded project structure. This is the information available before settings are evaluated.</description>
      <rank>10000</rank>
    </setting>
    <setting>
      <label>name</label>
      <description>Project name.</description>
      <rank>9</rank>
      <value>some-name</value>
    </setting>
    <setting>
      <label>retrieveConfiguration</label>
      <description>Configures retrieving dependencies to the current build.</description>
      <rank>10000</rank>
      <value>None</value>
    </setting>
    <setting>
      <label>startYear</label>
      <description>Year in which the project started.</description>
      <rank>41</rank>
      <value>None</value>
    </setting>
    <setting>
      <label>scalaSource</label>
      <description>Default Scala source directory.</description>
      <rank>10</rank>
    </setting>
    <setting>
      <label>compileOrder</label>
      <description>Configures the order in which Java and sources within a single compilation are compiled. Valid values are: JavaThenScala, ScalaThenJava, or Mixed.</description>
      <rank>39</rank>
      <value>Mixed</value>
    </setting>
    <setting>
      <label>conflictManager</label>
      <description>Selects the conflict manager to use for dependency management.</description>
      <rank>100</rank>
      <value>ConflictManager(latest-revision,*,*)</value>
    </setting>
    <setting>
      <label>isSnapshot</label>
      <description>True if the the version of the project is a snapshot version.</description>
      <rank>39</rank>
      <value>false</value>
    </setting>
    <setting>
      <label>unmanagedResourceDirectories</label>
      <description>Unmanaged resource directories, containing resources manually created by the user.</description>
      <rank>11</rank>
    </setting>
    <setting>
      <label>parallelExecution</label>
      <description>Enables (true) or disables (false) parallel execution of tasks.</description>
      <rank>41</rank>
      <value>true</value>
    </setting>
    <setting>
      <label>autoScalaLibrary</label>
      <description>Adds a dependency on scala-library if true.</description>
      <rank>10</rank>
      <value>true</value>
    </setting>
    <setting>
      <label>makePomConfiguration</label>
      <description>Configuration for generating a pom.</description>
      <rank>10000</rank>
      <value>MakePomConfiguration($BASE/tar...</value>
    </setting>
    <setting>
      <label>artifactClassifier</label>
      <description>Sets the classifier used by the default artifact definition.</description>
      <rank>40</rank>
      <value>None</value>
    </setting>
    <setting>
      <label>ivyPaths</label>
      <description>Configures paths used by Ivy for dependency management.</description>
      <rank>10000</rank>
    </setting>
    <setting>
      <label>projectInfo</label>
      <description>Addition project information like formal name, homepage, licenses etc.</description>
      <rank>100</rank>
      <value>ModuleInfo(some-name,some-name,None,None,List(),some-organization,None,None)</value>
    </setting>
    <setting>
      <label>connectInput</label>
      <description>If true, connects standard input when running a main class forked.</description>
      <rank>100</rank>
      <value>false</value>
    </setting>
    <setting>
      <label>sbtDependency</label>
      <description>Provides a definition for declaring the current version of sbt.</description>
      <rank>41</rank>
      <value>org.scala-sbt:sbt:0.13.0</value>
    </setting>
    <setting>
      <label>resourceDirectories</label>
      <description>List of all resource directories, both managed and unmanaged.</description>
      <rank>39</rank>
    </setting>
    <setting>
      <label>moduleConfigurations</label>
      <description>Defines module configurations, which override resolvers on a per-module basis.</description>
      <rank>41</rank>
      <value>List()</value>
    </setting>
    <setting>
      <label>cacheDirectory</label>
      <description>Directory used for caching task data.</description>
      <rank>41</rank>
      <value>$BASE/target/scala-2.10/cache/...</value>
    </setting>
    <setting>
      <label>scalaBinaryVersion</label>
      <description>The Scala version substring describing binary compatibility.</description>
      <rank>39</rank>
      <value>2.10</value>
    </setting>
    <setting>
      <label>excludeFilter</label>
      <description>Filter for excluding sources and resources files from default directories.</description>
      <rank>100</rank>
    </setting>
    <setting>
      <label>onLoadMessage</label>
      <description>Message to display when the project is loaded.</description>
      <rank>10000</rank>
      <value>Set current project to some-name (in build file:$HOME/workspace/sbt-structure/extractor/src/te...</value>
    </setting>
    <setting>
      <label>history</label>
      <description>The location where command line history is persisted.</description>
      <rank>40</rank>
      <value>Some($BASE/target/.history)</value>
    </setting>
    <setting>
      <label>pomPostProcess</label>
      <description>Transforms the generated POM.</description>
      <rank>100</rank>
      <value>&lt;function1&gt;</value>
    </setting>
    <setting>
      <label>cleanKeepFiles</label>
      <description>Files to keep during a clean.</description>
      <rank>100</rank>
      <value>List($BASE/target/.history)</value>
    </setting>
    <setting>
      <label>normalizedName</label>
      <description>Project name transformed from mixed case and spaces to lowercase and dash-separated.</description>
      <rank>40</rank>
      <value>some-name</value>
    </setting>
    <setting>
      <label>extraLoggers</label>
      <description>A function that provides additional loggers for a given setting.</description>
      <rank>10000</rank>
      <value>&lt;function1&gt;</value>
    </setting>
    <setting>
      <label>managedScalaInstance</label>
      <description>Automatically obtains Scala tools as managed dependencies if true.</description>
      <rank>40</rank>
      <value>true</value>
    </setting>
    <setting>
      <label>triggeredMessage</label>
      <description>The message to show before triggered execution executes an action after sources change.</description>
      <rank>10000</rank>
      <value>&lt;function1&gt;</value>
    </setting>
    <setting>
      <label>logBuffered</label>
      <description>True if logging should be buffered until work completes.</description>
      <rank>100</rank>
      <value>false</value>
    </setting>
    <setting>
      <label>transitiveClassifiers</label>
      <description>List of classifiers used for transitively obtaining extra artifacts for sbt or declared dependencies.</description>
      <rank>40</rank>
      <value>List(sources, javadoc)</value>
    </setting>
    <setting>
      <label>scmInfo</label>
      <description>Basic SCM information for the project.</description>
      <rank>41</rank>
      <value>None</value>
    </setting>
    <setting>
      <label>managedDirectory</label>
      <description>Directory to which managed dependencies are retrieved.</description>
      <rank>40</rank>
      <value>$BASE/lib_managed</value>
    </setting>
    <setting>
      <label>unmanagedBase</label>
      <description>The default directory for manually managed libraries.</description>
      <rank>10</rank>
      <value>$BASE/lib</value>
    </setting>
    <setting>
      <label>sbtBinaryVersion</label>
      <description>Defines the binary compatibility version substring.</description>
      <rank>39</rank>
      <value>0.13</value>
    </setting>
    <setting>
      <label>projectId</label>
      <description>The dependency management descriptor for the current module.</description>
      <rank>41</rank>
      <value>some-organization:some-name:1.2.3</value>
    </setting>
    <setting>
      <label>description</label>
      <description>Project description.</description>
      <rank>40</rank>
      <value>some-name</value>
    </setting>
    <setting>
      <label>baseDirectory</label>
      <description>The base directory. Depending on the scope, this is the base directory for the build, project, configuration, or task.</description>
      <rank>11</rank>
      <value>$BASE</value>
    </setting>
    <setting>
      <label>scalaHome</label>
      <description>If Some, defines the local Scala installation to use for compilation, running, and testing.</description>
      <rank>10</rank>
      <value>None</value>
    </setting>
    <setting>
      <label>ivyScala</label>
      <description>Configures how Scala dependencies are checked, filtered, and injected.</description>
      <rank>100</rank>
      <value>Some(IvyScala(2.10.1,2.10,List(),true,false,false,org.scala-lang))</value>
    </setting>
    <setting>
      <label>publishTo</label>
      <description>The resolver to publish to.</description>
      <rank>10</rank>
      <value>None</value>
    </setting>
    <setting>
      <label>tags</label>
      <description>tags</description>
      <rank>40</rank>
    </setting>
    <setting>
      <label>artifactPath</label>
      <description>The location of a generated artifact.</description>
      <rank>39</rank>
    </setting>
    <setting>
      <label>sourceDirectory</label>
      <description>Default directory containing sources.</description>
      <rank>11</rank>
      <value>$BASE/src</value>
    </setting>
    <setting>
      <label>organizationHomepage</label>
      <description>Organization homepage.</description>
      <rank>41</rank>
      <value>None</value>
    </setting>
    <setting>
      <label>pomIncludeRepository</label>
      <description>Selects repositories to include in the generated POM.</description>
      <rank>100</rank>
      <value>&lt;function1&gt;</value>
    </setting>
    <setting>
      <label>includeFilter</label>
      <description>Filter for including sources and resources files from default directories.</description>
      <rank>100</rank>
    </setting>
    <setting>
      <label>sourceDirectories</label>
      <description>List of all source directories, both managed and unmanaged.</description>
      <rank>11</rank>
    </setting>
    <setting>
      <label>trapExit</label>
      <description>If true, enables exit trapping and thread management for 'run'-like tasks. This is currently only suitable for serially-executed 'run'-like tasks.</description>
      <rank>100</rank>
      <value>false</value>
    </setting>
    <setting>
      <label>appResolvers</label>
      <description>The resolvers configured for this application by the sbt launcher.</description>
      <rank>41</rank>
      <value>Some(ArrayBuffer(FileRepository(local,FileConfiguration(true,None),Patterns(ivyPatterns=List(${ivy.h...</value>
    </setting>
    <setting>
      <label>retrieveManaged</label>
      <description>If true, enables retrieving dependencies to the current build. Otherwise, dependencies are used directly from the cache.</description>
      <rank>40</rank>
      <value>false</value>
    </setting>
    <setting>
      <label>organizationName</label>
      <description>Organization full/formal name.</description>
      <rank>41</rank>
      <value>some-organization</value>
    </setting>
    <setting>
      <label>autoCompilerPlugins</label>
      <description>If true, enables automatically generating -Xplugin arguments to the compiler based on the classpath for the plugin configuration.</description>
      <rank>11</rank>
      <value>true</value>
    </setting>
    <setting>
      <label>outputStrategy</label>
      <description>Selects how to log output when running a main class.</description>
      <rank>10000</rank>
      <value>None</value>
    </setting>
    <setting>
      <label>thisProjectRef</label>
      <description>Provides a fully-resolved reference to the current project for the referencing scope.</description>
      <rank>100</rank>
      <value>ProjectRef($URI_BASE,depende...</value>
    </setting>
    <setting>
      <label>unmanagedSourceDirectories</label>
      <description>Unmanaged source directories, which contain manually created sources.</description>
      <rank>10</rank>
    </setting>
    <setting>
      <label>watch</label>
      <description>Continuous execution configuration.</description>
      <rank>1000</rank>
    </setting>
    <setting>
      <label>overrideBuildResolvers</label>
      <description>Whether or not all the build resolvers should be overriden with what's defined from the launcher.</description>
      <rank>41</rank>
      <value>false</value>
    </setting>
    <setting>
      <label>resolvers</label>
      <description>The user-defined additional resolvers for automatically managed dependencies.</description>
      <rank>31</rank>
      <value>List()</value>
    </setting>
    <setting>
      <label>publishMavenStyle</label>
      <description>Configures whether to generate and publish a pom (true) or Ivy file (false).</description>
      <rank>40</rank>
      <value>true</value>
    </setting>
    <setting>
      <label>pomExtra</label>
      <description>Extra XML to insert into the generated POM.</description>
      <rank>40</rank>
      <value></value>
    </setting>
    <setting>
      <label>testFrameworks</label>
      <description>Registered, although not necessarily present, test frameworks.</description>
      <rank>200</rank>
      <value>List(TestFramework(WrappedArray(org.scalacheck.ScalaCheckFramework)), TestFramework(WrappedArray(org...</value>
    </setting>
    <setting>
      <label>apiUrl</label>
      <description>Base URL for API documentation.</description>
      <rank>41</rank>
      <value>None</value>
    </setting>
    <setting>
      <label>exportJars</label>
      <description>Determines whether the exported classpath for this project contains classes (false) or a packaged jar (true).</description>
      <rank>40</rank>
      <value>false</value>
    </setting>
    <setting>
      <label>scalaVersion</label>
      <description>The version of Scala used for building.</description>
      <rank>9</rank>
      <value>2.10.1</value>
    </setting>
    <setting>
      <label>moduleName</label>
      <description>The name of the current module, used for dependency management.</description>
      <rank>40</rank>
      <value>some-name</value>
    </setting>
    <setting>
      <label>conflictWarning</label>
      <description>Configures warnings for conflicts in dependency management.</description>
      <rank>100</rank>
      <value>ConflictWarning({$URI_BASE}d...</value>
    </setting>
    <setting>
      <label>internalConfigurationMap</label>
      <description>Maps configurations to the actual configuration used to define the classpath.</description>
      <rank>100</rank>
      <value>&lt;function1&gt;</value>
    </setting>
    <setting>
      <label>ivyLoggingLevel</label>
      <description>The logging level for updating.</description>
      <rank>40</rank>
      <value>DownloadOnly</value>
    </setting>
    <setting>
      <label>sbtPlugin</label>
      <description>If true, enables adding sbt as a dependency and auto-generation of the plugin descriptor file.</description>
      <rank>41</rank>
      <value>false</value>
    </setting>
    <setting>
      <label>otherResolvers</label>
      <description>Resolvers not included in the main resolver chain, such as those in module configurations.</description>
      <rank>100</rank>
      <value>List(FileRepository(publish-m2-local,FileConfiguration(true,None),Patterns(ivyPatterns=List(), artif...</value>
    </setting>
    <setting>
      <label>ivyValidate</label>
      <description>Enables/disables Ivy validation of module metadata.</description>
      <rank>40</rank>
      <value>false</value>
    </setting>
    <setting>
      <label>appConfiguration</label>
      <description>Provides access to the launched sbt configuration, including the ScalaProvider, Launcher, and GlobalLock.</description>
      <rank>10000</rank>
    </setting>
    <setting>
      <label>publishArtifact</label>
      <description>Enables (true) or disables (false) publishing an artifact.</description>
      <rank>11</rank>
      <value>true</value>
    </setting>
    <setting>
      <label>artifactName</label>
      <description>Function that produces the artifact name from its definition.</description>
      <rank>100</rank>
      <value>&lt;function3&gt;</value>
    </setting>
    <setting>
      <label>crossPaths</label>
      <description>If true, enables cross paths, which distinguish output directories for cross-building.</description>
      <rank>10</rank>
      <value>true</value>
    </setting>
    <setting>
      <label>autoApiMappings</label>
      <description>If true, automatically manages mappings to the API doc URL.</description>
      <rank>41</rank>
      <value>false</value>
    </setting>
    <setting>
      <label>ivyConfigurations</label>
      <description>The defined configurations for dependency management. This may be different from the configurations for Project settings.</description>
      <rank>40</rank>
      <value>List(compile, runtime, test, provided, optional, compile-internal, runtime-internal, test-internal, ...</value>
    </setting>
    <setting>
      <label>crossVersion</label>
      <description>Configures handling of the Scala version when cross-building.</description>
      <rank>100</rank>
      <value>Binary</value>
    </setting>
    <setting>
      <label>fork</label>
      <description>If true, forks a new JVM when running. If false, runs in the same JVM as the build.</description>
      <rank>10</rank>
      <value>false</value>
    </setting>
    <setting>
      <label>updateConfiguration</label>
      <description>Configuration for resolving and retrieving managed dependencies.</description>
      <rank>10000</rank>
    </setting>
    <setting>
      <label>crossTarget</label>
      <description>Main directory for files generated by the build that are cross-built.</description>
      <rank>40</rank>
      <value>$BASE/target/scala-2.10</value>
    </setting>
    <setting>
      <label>version</label>
      <description>The version/revision of the current module.</description>
      <rank>9</rank>
      <value>1.2.3</value>
    </setting>
    <setting>
      <label>buildDependencies</label>
      <description>
        Definitive source of inter-project dependencies for compilation and dependency management.
	This is populated by default by the dependencies declared on Project instances, but may be modified.
	The main restriction is that new builds may not be introduced.
      </description>
      <rank>10000</rank>
    </setting>
    <setting>
      <label>resourceManaged</label>
      <description>Default managed resource directory, used when generating resources.</description>
      <rank>40</rank>
      <value>$BASE/target/scala-2.10/resour...</value>
    </setting>
    <setting>
      <label>resourceGenerators</label>
      <description>List of tasks that generate resources.</description>
      <rank>100</rank>
    </setting>
    <setting>
      <label>sourcesInBase</label>
      <description>If true, sources from the project's base directory are included as main sources.</description>
      <rank>25</rank>
      <value>true</value>
    </setting>
    <setting>
      <label>resourceDirectory</label>
      <description>Default unmanaged resource directory, used for user-defined resources.</description>
      <rank>10</rank>
    </setting>
    <setting>
      <label>logManager</label>
      <description>The log manager, which creates Loggers for different contexts.</description>
      <rank>10000</rank>
    </setting>
    <setting>
      <label>javaSource</label>
      <description>Default Java source directory.</description>
      <rank>10</rank>
    </setting>
    <setting>
      <label>defaultConfiguration</label>
      <description>Defines the configuration used when none is specified for a dependency in ivyXML.</description>
      <rank>100</rank>
      <value>Some(compile)</value>
    </setting>
    <setting>
      <label>classpathTypes</label>
      <description>Artifact types that are included on the classpath.</description>
      <rank>40</rank>
      <value>Set(eclipse-plugin, bundle, hk2-jar, orbit, jar)</value>
    </setting>
    <setting>
      <label>cleanFiles</label>
      <description>The files to recursively delete during a clean.</description>
      <rank>40</rank>
      <value>List($BASE/lib_managed, /Users...</value>
    </setting>
    <setting>
      <label>classDirectory</label>
      <description>Directory for compiled classes and copied resources.</description>
      <rank>11</rank>
    </setting>
    <setting>
      <label>homepage</label>
      <description>Project homepage.</description>
      <rank>40</rank>
      <value>None</value>
    </setting>
    <setting>
      <label>initialCommands</label>
      <description>Initial commands to execute when starting up the Scala interpreter.</description>
      <rank>11</rank>
      <value></value>
    </setting>
    <setting>
      <label>taskTemporaryDirectory</label>
      <description>Directory used for temporary files for tasks that is deleted after each task execution.</description>
      <rank>10000</rank>
      <value>/var/folders/5k/4b5my29x26q_dhrys3ghf9wh0000gn/T/sbt_e5d3fba4</value>
    </setting>
    <setting>
      <label>configuration</label>
      <description>Provides the current configuration of the referencing scope.</description>
      <rank>100</rank>
    </setting>
    <setting>
      <label>thisProject</label>
      <description>Provides the current project for the referencing scope.</description>
      <rank>100</rank>
      <value>Project(id: dependency, base: $HOME/workspace/sbt-structure/extractor/src/test/data/0.13/depen...</value>
    </setting>
    <setting>
      <label>watchingMessage</label>
      <description>The message to show when triggered execution waits for sources to change.</description>
      <rank>10000</rank>
      <value>&lt;function1&gt;</value>
    </setting>
    <setting>
      <label>ssOptions</label>
      <description>options for dumpStructure task</description>
      <rank>10000</rank>
      <value>Options(true,true,true,true,true)</value>
    </setting>
    <setting>
      <label>managedResourceDirectories</label>
      <description>List of managed resource directories.</description>
      <rank>11</rank>
    </setting>
    <setting>
      <label>managedSourceDirectories</label>
      <description>Managed source directories, which contain sources generated by the build.</description>
      <rank>40</rank>
    </setting>
    <setting>
      <label>target</label>
      <description>Main directory for files generated by the build.</description>
      <rank>11</rank>
      <value>$BASE/target</value>
    </setting>
    <setting>
      <label>javaHome</label>
      <description>Selects the Java installation used for compiling and forking. If None, uses the Java installation running the build.</description>
      <rank>10</rank>
      <value>None</value>
    </setting>
    <setting>
      <label>libraryDependencies</label>
      <description>Declares managed dependencies.</description>
      <rank>9</rank>
      <value>List(org.scala-lang:scala-library:2.10.1, junit:junit:3.8.1:test)</value>
    </setting>
    <setting>
      <label>checksums</label>
      <description>The list of checksums to generate and to verify for dependencies.</description>
      <rank>40</rank>
      <value>WrappedArray(sha1, md5)</value>
    </setting>
    <setting>
      <label>sourceGenerators</label>
      <description>List of tasks that generate sources.</description>
      <rank>100</rank>
    </setting>
    <setting>
      <label>offline</label>
      <description>Configures sbt to work without a network connection where possible.</description>
      <rank>10</rank>
      <value>false</value>
    </setting>
    <setting>
      <label>pollInterval</label>
      <description>Interval between checks for modified sources by the continuous execution command.</description>
      <rank>41</rank>
      <value>500</value>
    </setting>
    <setting>
      <label>artifact</label>
      <description>Describes an artifact.</description>
      <rank>41</rank>
      <value>Artifact(some-name,jar,jar,None,List(),None,Map())</value>
    </setting>
    <task>
      <label>definedSbtPlugins</label>
      <description>The set of names of Plugin implementations defined by this project.</description>
      <rank>200</rank>
    </task>
    <task>
      <label>copyResources</label>
      <description>Copies resources to the output directory.</description>
      <rank>6</rank>
    </task>
    <task>
      <label>managedSources</label>
      <description>Sources generated by the build.</description>
      <rank>30</rank>
    </task>
    <task>
      <label>ivyConfiguration</label>
      <description>General dependency management (Ivy) settings, such as the resolvers and paths to use.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>updateClassifiers</label>
      <description>Resolves and optionally retrieves classified artifacts, such as javadocs and sources, for dependency definitions, transitively.</description>
      <rank>29</rank>
    </task>
    <task>
      <label>classifiersModule</label>
      <description></description>
      <rank>200</rank>
    </task>
    <task>
      <label>test</label>
      <description>Executes all tests.</description>
      <rank>4</rank>
    </task>
    <task>
      <label>mappings</label>
      <description>Defines the mappings from a file to a path, used by packaging, for example.</description>
      <rank>30</rank>
    </task>
    <task>
      <label>package</label>
      <description>Produces the main artifact, such as a binary jar. This is typically an alias for the task that actually does the packaging.</description>
      <rank>4</rank>
    </task>
    <task>
      <label>watchSources</label>
      <description>Defines the sources in this project for continuous execution to watch for changes.</description>
      <rank>41</rank>
    </task>
    <task>
      <label>apiMappings</label>
      <description>Mappings from classpath entry to API documentation base URL.</description>
      <rank>41</rank>
    </task>
    <task>
      <label>settingsData</label>
      <description>Provides access to the project data for the build.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>deliverLocal</label>
      <description>Generates the Ivy file for publishing to the local repository.</description>
      <rank>30</rank>
    </task>
    <task>
      <label>ivySbt</label>
      <description>Provides the sbt interface to Ivy.</description>
      <rank>200</rank>
    </task>
    <task>
      <label>classpathConfiguration</label>
      <description>The configuration used to define the classpath.</description>
      <rank>200</rank>
    </task>
    <task>
      <label>allDependencies</label>
      <description>Inter-project and library dependencies.</description>
      <rank>200</rank>
    </task>
    <task>
      <label>testFilter</label>
      <description>Filter controlling whether the test is executed</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>productDirectories</label>
      <description>Base directories of build products.</description>
      <rank>200</rank>
    </task>
    <task>
      <label>externalDependencyClasspath</label>
      <description>The classpath consisting of library dependencies, both managed and unmanaged.</description>
      <rank>31</rank>
    </task>
    <task>
      <label>unmanagedClasspath</label>
      <description>Classpath entries (deep) that are manually managed.</description>
      <rank>29</rank>
    </task>
    <task>
      <label>dependencyClasspath</label>
      <description>The classpath consisting of internal and external, managed and unmanaged dependencies.</description>
      <rank>29</rank>
    </task>
    <task>
      <label>loadedTestFrameworks</label>
      <description>Loads Framework definitions from the test loader.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>incCompileSetup</label>
      <description>Configures aspects of incremental compilation.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>packagedArtifact</label>
      <description>Generates a packaged artifact, returning the Artifact and the produced File.</description>
      <rank>200</rank>
    </task>
    <task>
      <label>moduleSettings</label>
      <description>Module settings, which configure dependency management for a specific module, such as a project.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>deliverConfiguration</label>
      <description>Configuration for generating the finished Ivy file for publishing.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>consoleProject</label>
      <description>Starts the Scala interpreter with the sbt and the build definition on the classpath and useful imports.</description>
      <rank>6</rank>
    </task>
    <task>
      <label>state</label>
      <description>Current build state.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>buildStructure</label>
      <description>Provides access to the build structure, settings, and streams manager.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>discoveredMainClasses</label>
      <description>Auto-detects main classes.</description>
      <rank>31</rank>
    </task>
    <task>
      <label>testLoader</label>
      <description>Provides the class loader used for testing.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>externalResolvers</label>
      <description>The external resolvers for automatically managed dependencies.</description>
      <rank>41</rank>
    </task>
    <task>
      <label>deliver</label>
      <description>Generates the Ivy file for publishing to a repository.</description>
      <rank>30</rank>
    </task>
    <task>
      <label>packageBin</label>
      <description>Produces a main artifact, such as a binary jar.</description>
      <rank>5</rank>
    </task>
    <task>
      <label>projectResolver</label>
      <description>Resolver that handles inter-project dependencies.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>scalacOptions</label>
      <description>Options for the Scala compiler.</description>
      <rank>29</rank>
    </task>
    <task>
      <label>unmanagedSources</label>
      <description>Unmanaged sources, which are manually created.</description>
      <rank>29</rank>
    </task>
    <task>
      <label>incOptions</label>
      <description>Options for the incremental compiler.</description>
      <rank>30</rank>
    </task>
    <task>
      <label>mainClass</label>
      <description>Defines the main class for packaging or running.</description>
      <rank>29</rank>
    </task>
    <task>
      <label>packageDoc</label>
      <description>Produces a documentation artifact, such as a jar containing API documentation.</description>
      <rank>6</rank>
    </task>
    <task>
      <label>managedResources</label>
      <description>Resources generated by the build.</description>
      <rank>30</rank>
    </task>
    <task>
      <label>run</label>
      <description>Runs a main class, passing along arguments provided on the command line.</description>
      <rank>4</rank>
    </task>
    <task>
      <label>consoleQuick</label>
      <description>Starts the Scala interpreter with the project dependencies on the classpath.</description>
      <rank>5</rank>
    </task>
    <task>
      <label>javacOptions</label>
      <description>Options for the Java compiler.</description>
      <rank>29</rank>
    </task>
    <task>
      <label>clean</label>
      <description>Deletes files produced by the build, such as generated sources, compiled classes, and task caches.</description>
      <rank>4</rank>
    </task>
    <task>
      <label>streamsManager</label>
      <description>Streams manager, which provides streams for different contexts.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>javaOptions</label>
      <description>Options passed to a new JVM when forking.</description>
      <rank>29</rank>
    </task>
    <task>
      <label>printWarnings</label>
      <description>Shows warnings from compilation, including ones that weren't printed initially.</description>
      <rank>29</rank>
    </task>
    <task>
      <label>projectDependencies</label>
      <description>Inter-project dependencies.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>testOnly</label>
      <description>Executes the tests provided as arguments or all tests if no arguments are provided.</description>
      <rank>5</rank>
    </task>
    <task>
      <label>compileInputs</label>
      <description>Collects all inputs needed for compilation.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>publishLocal</label>
      <description>Publishes artifacts to the local Ivy repository.</description>
      <rank>4</rank>
    </task>
    <task>
      <label>publishLocalConfiguration</label>
      <description>Configuration for publishing to the local Ivy repository.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>packageConfiguration</label>
      <description>Collects all inputs needed for packaging.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>executionRoots</label>
      <description>The list of root tasks for this task execution. Roots are the top-level tasks that were directly requested to be run.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>packageOptions</label>
      <description>Options for packaging.</description>
      <rank>30</rank>
    </task>
    <task>
      <label>projectDescriptors</label>
      <description>Project dependency map for the inter-project resolver.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>fullResolvers</label>
      <description>Combines the project resolver, default resolvers, and user-defined resolvers.</description>
      <rank>200</rank>
    </task>
    <task>
      <label>exportedProducts</label>
      <description>Build products that go on the exported classpath.</description>
      <rank>200</rank>
    </task>
    <task>
      <label>envVars</label>
      <description>Environment variables used when forking a new JVM</description>
      <rank>30</rank>
    </task>
    <task>
      <label>runner</label>
      <description>Implementation used to run a main class.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>skip</label>
      <description>
        For tasks that support it (currently only 'compile' and 'update'), setting skip to true will force the task to not to do its work.  This exact semantics may vary by task.
      </description>
      <rank>40</rank>
    </task>
    <task>
      <label>scalaInstance</label>
      <description>Defines the Scala instance to use for compilation, running, and testing.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>products</label>
      <description>Build products that get packaged.</description>
      <rank>31</rank>
    </task>
    <task>
      <label>testExecution</label>
      <description>Settings controlling test execution</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>sourcePositionMappers</label>
      <description>Maps positions in generated source files to the original source it was generated from</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>compilers</label>
      <description>Defines the Scala and Java compilers to use for compilation.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>updateSbtClassifiers</label>
      <description>Resolves and optionally retrieves classifiers, such as javadocs and sources, for sbt, transitively.</description>
      <rank>29</rank>
    </task>
    <task>
      <label>compile</label>
      <description>Compiles sources.</description>
      <rank>4</rank>
    </task>
    <task>
      <label>publishConfiguration</label>
      <description>Configuration for publishing to a repository.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>runMain</label>
      <description>Runs the main class selected by the first argument, passing the remaining arguments to the main method.</description>
      <rank>5</rank>
    </task>
    <task>
      <label>deliverLocalConfiguration</label>
      <description>Configuration for generating the finished Ivy file for local publishing.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>publishM2</label>
      <description>Publishes artifacts to the local Maven repository.</description>
      <rank>5</rank>
    </task>
    <task>
      <label>unmanagedResources</label>
      <description>Unmanaged resources, which are manually created.</description>
      <rank>29</rank>
    </task>
    <task>
      <label>makePom</label>
      <description>Generates a pom for publishing when publishing Maven-style.</description>
      <rank>29</rank>
    </task>
    <task>
      <label>definedTestNames</label>
      <description>Provides the set of defined test names.</description>
      <rank>31</rank>
    </task>
    <task>
      <label>doc</label>
      <description>Generates API documentation.</description>
      <rank>6</rank>
    </task>
    <task>
      <label>packageSrc</label>
      <description>Produces a source artifact, such as a jar containing sources and resources.</description>
      <rank>6</rank>
    </task>
    <task>
      <label>unmanagedJars</label>
      <description>Classpath entries for the current project (shallow) that are manually managed.</description>
      <rank>29</rank>
    </task>
    <task>
      <label>publishM2Configuration</label>
      <description>Configuration for publishing to the local Maven repository.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>managedClasspath</label>
      <description>The classpath consisting of external, managed library dependencies.</description>
      <rank>31</rank>
    </task>
    <task>
      <label>publish</label>
      <description>Publishes artifacts to a repository.</description>
      <rank>4</rank>
    </task>
    <task>
      <label>fullClasspath</label>
      <description>The exported classpath, consisting of build products and unmanaged and managed, internal and external dependencies.</description>
      <rank>29</rank>
    </task>
    <task>
      <label>transitiveUpdate</label>
      <description>UpdateReports for the internal dependencies of this project.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>definedTests</label>
      <description>Provides the list of defined tests.</description>
      <rank>31</rank>
    </task>
    <task>
      <label>testGrouping</label>
      <description>Collects discovered tests into groups. Whether to fork and the options for forking are configurable on a per-group basis.</description>
      <rank>31</rank>
    </task>
    <task>
      <label>selectMainClass</label>
      <description>Selects the main class to run.</description>
      <rank>31</rank>
    </task>
    <task>
      <label>streams</label>
      <description>Provides streams for logging and persisting data.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>watchTransitiveSources</label>
      <description>Defines the sources in all projects for continuous execution to watch.</description>
      <rank>100</rank>
    </task>
    <task>
      <label>testOptions</label>
      <description>Options for running tests.</description>
      <rank>29</rank>
    </task>
    <task>
      <label>packagedArtifacts</label>
      <description>Packages all artifacts for publishing and maps the Artifact definition to the generated file.</description>
      <rank>200</rank>
    </task>
    <task>
      <label>testListeners</label>
      <description>Defines test listeners.</description>
      <rank>20000</rank>
    </task>
    <task>
      <label>executeTests</label>
      <description>Executes all tests, producing a report.</description>
      <rank>200</rank>
    </task>
    <task>
      <label>resources</label>
      <description>All resource files, both managed and unmanaged.</description>
      <rank>30</rank>
    </task>
    <task>
      <label>internalDependencyClasspath</label>
      <description>The internal (inter-project) classpath.</description>
      <rank>200</rank>
    </task>
    <task>
      <label>bootResolvers</label>
      <description>The resolvers used by the sbt launcher.</description>
      <rank>41</rank>
    </task>
    <task>
      <label>update</label>
      <description>Resolves and optionally retrieves dependencies, producing a report.</description>
      <rank>5</rank>
    </task>
    <task>
      <label>sources</label>
      <description>All sources, both managed and unmanaged.</description>
      <rank>30</rank>
    </task>
    <task>
      <label>console</label>
      <description>Starts the Scala interpreter with the project classes on the classpath.</description>
      <rank>4</rank>
    </task>
    <task>
      <label>ivyModule</label>
      <description>Provides the sbt interface to a configured Ivy module.</description>
      <rank>200</rank>
    </task>
    <task>
      <label>testQuick</label>
      <description>Executes the tests that either failed before, were not run or whose transitive dependencies changed, among those provided as arguments.</description>
      <rank>5</rank>
    </task>
    <task>
      <label>credentials</label>
      <description>The credentials to use for updating and publishing.</description>
      <rank>31</rank>
    </task>
    <task>
      <label>compilerCache</label>
      <description>Cache of scala.tools.nsc.Global instances. This should typically be cached so that it isn't recreated every task run.</description>
      <rank>20000</rank>
    </task>
    <command>
      <name>initialize</name>
    </command>
    <command>
      <name>add-default-commands</name>
    </command>
    <command>
      <name>---</name>
    </command>
    <command>
      <name>help</name>
      <help>
        <cmd>help</cmd>
        <desc>Displays this help message or prints detailed help on requested commands (run 'help &lt;command&gt;').</desc>
      </help>
    </command>
    <command>
      <name>about</name>
      <help>
        <cmd>about</cmd>
        <desc>Displays basic information about sbt and the build.</desc>
      </help>
    </command>
    <command>
      <name>tasks</name>
      <help>
        <cmd>tasks</cmd>
        <desc>Lists the tasks defined for the current project.</desc>
      </help>
    </command>
    <command>
      <name>settings</name>
      <help>
        <cmd>settings</cmd>
        <desc>Lists the settings defined for the current project.</desc>
      </help>
    </command>
    <command>
      <name>reload</name>
      <help>
        <cmd>reload</cmd>
        <desc>(Re)loads the project in the current directory</desc>
      </help>
    </command>
    <command>
      <name>projects</name>
      <help>
        <cmd>projects</cmd>
        <desc>Lists the names of available projects or temporarily adds/removes extra builds to the session.</desc>
      </help>
    </command>
    <command>
      <name>project</name>
      <help>
        <cmd>project</cmd>
        <desc>Displays the current project or changes to the provided `project`.</desc>
      </help>
    </command>
    <command>
      <name>reboot</name>
    </command>
    <command>
      <name>&lt;</name>
    </command>
    <command>
      <name>set</name>
      <help>
        <cmd>set [every] &lt;setting&gt;</cmd>
        <desc>Evaluates a Setting and applies it to the current project.</desc>
      </help>
    </command>
    <command>
      <name>session</name>
      <help>
        <cmd>session</cmd>
        <desc>Manipulates session settings. For details, run 'help session'.</desc>
      </help>
    </command>
    <command>
      <name>inspect</name>
      <help>
        <cmd>inspect [uses|tree|definitions] &lt;key&gt;</cmd>
        <desc>Prints the value for 'key', the defining scope, delegates, related definitions, and dependencies.</desc>
      </help>
    </command>
    <command>
      <name>loadp</name>
    </command>
    <command>
      <name>load-failed</name>
    </command>
    <command>
      <name>-</name>
    </command>
    <command>
      <name>--</name>
    </command>
    <command>
      <name>sbtStashOnFailure</name>
    </command>
    <command>
      <name>sbtPopOnFailure</name>
    </command>
    <command>
      <name>iflast</name>
    </command>
    <command>
      <name>shell</name>
    </command>
    <command>
      <name>~</name>
      <help>
        <cmd>~ &lt;command&gt;</cmd>
        <desc>Executes the specified command whenever source files change.</desc>
      </help>
    </command>
    <command>
      <name>eval</name>
    </command>
    <command>
      <name>alias</name>
    </command>
    <command>
      <name>append</name>
    </command>
    <command>
      <name>last</name>
      <help>
        <cmd>last</cmd>
        <desc>Displays output from a previous command or the output from a specific task.</desc>
      </help>
    </command>
    <command>
      <name>last-grep</name>
      <help>
        <cmd>last-grep</cmd>
        <desc>Shows lines from the last output for 'key' that match 'pattern'.</desc>
      </help>
    </command>
    <command>
      <name>export</name>
      <help>
        <cmd>export &lt;tasks&gt;+</cmd>
        <desc>Executes tasks and displays the equivalent command lines.</desc>
      </help>
    </command>
    <command>
      <name>boot</name>
    </command>
    <command>
      <name>apply</name>
    </command>
    <command>
      <name>exit</name>
      <help>
        <cmd>exit</cmd>
        <desc>Terminates the build.</desc>
      </help>
    </command>
  </project>
  <repository>
    <module organization="junit" name="junit" revision="3.8.1" artifactType="jar" classifier="">
      <jar>$IVY2/cache/junit/junit/jars/junit-3.8.1.jar</jar>
      <src>$IVY2/cache/junit/junit/srcs/junit-3.8.1-sources.jar</src>
    </module>
    <module organization="org.scala-lang" name="scala-library" revision="2.10.1" artifactType="jar" classifier="">
      <jar>$IVY2/cache/org.scala-lang/scala-library/jars/scala-library-2.10.1.jar</jar>
      <doc>$IVY2/cache/org.scala-lang/scala-library/docs/scala-library-2.10.1-javadoc.jar</doc>
      <src>$IVY2/cache/org.scala-lang/scala-library/srcs/scala-library-2.10.1-sources.jar</src>
    </module>
  </repository>
  <localCachePath>$IVY2</localCachePath>
</structure>
